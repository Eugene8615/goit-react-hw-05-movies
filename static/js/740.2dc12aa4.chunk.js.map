{"version":3,"file":"static/js/740.2dc12aa4.chunk.js","mappings":"6SACaA,EAAc,mCAAG,2FAG7BC,EAAAA,EAAAA,SAAAA,QAAyB,kDAHI,4CAOJA,EAAAA,EAAAA,IAAU,GAAI,CAChCC,OAAQ,CACJC,QATkB,oDAOtBC,EAPsB,yBAcnBA,GAdmB,2CAAH,qDAoBdC,EAAc,mCAAG,WAAOC,GAAP,8EAG7BL,EAAAA,EAAAA,SAAAA,QAAyB,sCAHI,4CAOJA,EAAAA,EAAAA,IAAA,UAAaK,GAAM,CACrCJ,OAAQ,CACNC,QAToB,oDAOtBC,EAPsB,yBAenBA,GAfmB,2CAAH,sDAmBdG,EAAS,mCAAG,WAAOD,GAAP,8EACzBL,EAAAA,EAAAA,SAAAA,QAAyB,sCADA,4CAKCA,EAAAA,EAAAA,IAAA,UAAaK,EAAb,YAA2B,CAC7CJ,OAAQ,CACNC,QAPe,oDAKjBC,EALiB,yBAadA,GAbc,2CAAH,sDAiBTI,EAAgB,mCAAG,WAAOF,GAAP,8EAChCL,EAAAA,EAAAA,SAAAA,QAAyB,sCADO,4CAKNA,EAAAA,EAAAA,IAAA,UAAaK,EAAb,YAA2B,CAC7CJ,OAAQ,CACNC,QAPsB,oDAKxBC,EALwB,yBAarBA,GAbqB,2CAAH,sDAiBhBK,EAAiB,mCAAG,WAAOC,GAAP,8EAE7BT,EAAAA,EAAAA,SAAAA,QAAyB,4CAFI,4CAMPA,EAAAA,EAAAA,IAAA,GAAc,CAChCC,OAAQ,CACNC,QARuB,mCASvBQ,SAAU,QACVD,MAAAA,EACAE,KAAM,EACNC,eAAe,KAZQ,cAMzBT,EANyB,yBAmBtBA,GAnBsB,2CAAH,qD,gHCd9B,UAtDe,WACX,OAAwCU,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMN,EAAsC,OAA9BK,EAAaE,IAAI,SAAoB,GAAKF,EAAaE,IAAI,SACzE,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEAC,QAAQC,IAAIZ,IAGZa,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAW,mCAAG,8GAIWf,EAAAA,EAAAA,IAAkBC,GAJ7B,OAINN,EAJM,OAKZgB,EAAUhB,EAASqB,KAAKC,SALZ,gDAOZL,QAAQC,IAAR,MAPY,iEAAH,qDAWjBE,GAGH,GAAE,CAACd,IAYJ,OAAQ,+BACJ,4BAEI,kBAAMiB,OAAO,GAAGC,SAZH,SAACC,GAClBA,EAAEC,iBACFd,EAAgB,CAACN,MAAOmB,EAAEE,OAAOC,SAASC,MAAMC,OACnD,EASO,WACI,kBACIC,KAAK,OACLC,KAAK,WAET,mBAAQD,KAAK,SAAb,wBAGJ,SAAC,IAAD,CAAehB,OAAQA,QAMlC,C,iGCzDYkB,EAAUC,EAAAA,EAAAA,GAAH,yDAIPC,EAAOD,EAAAA,EAAAA,GAAH,6L,SCDF,SAASE,EAAT,GAAoC,IAAXrB,EAAU,EAAVA,OAC9BsB,GAAWC,EAAAA,EAAAA,MAGjB,OAFArB,QAAQC,IAAIH,IAGR,SAACkB,EAAD,UACKlB,EAAOwB,KAAI,SAAAC,GACR,IAAMC,EAAK,0CAAsCD,EAAME,aACvD,OACI,SAACP,EAAD,WACI,UAAC,KAAD,CAAMQ,GAAE,kBAAaH,EAAMtC,IAAM0C,MAAO,CAAEC,KAAMR,GAAhD,WACI,gBAAKS,IAAKL,EAAOM,IAAKP,EAAMQ,SAC5B,uBAAIR,EAAMQ,YAHPR,EAAMtC,GAOxB,KAGZ,C","sources":["Api/Api.js","Pages/Movies.jsx","components/MoviesGallery/MoviesGallery.styles.jsx","components/MoviesGallery/MoviesGallery.jsx"],"sourcesContent":["import axios from \"axios\";\nexport const fetchTrendings = async () => { \n    \n\n axios.defaults.baseURL = 'https://api.themoviedb.org/3/trending/movie/day';\n    const KEY = `9974480522bc7822e6ea6c551c75459b`;\n\n\n  const response = await  axios.get('', {\n        params: {\n            api_key: KEY,\n        },\n    });  \n\n    \n    return response;\n\n};\n\n\n\nexport const fetchMovieById = async (id) => { \n    \n\n axios.defaults.baseURL = 'https://api.themoviedb.org/3/movie/';\n    const KEY = `9974480522bc7822e6ea6c551c75459b`;\n\n\n  const response = await  axios.get(`${id}`, {\n        params: {\n          api_key: KEY,\n            \n        },\n    });  \n\n    \n    return response;\n\n};\n\nexport const fetchCast = async (id) => { \naxios.defaults.baseURL = 'https://api.themoviedb.org/3/movie/';\n    const KEY = `9974480522bc7822e6ea6c551c75459b`;\n\n\n  const response = await  axios.get(`${id}/credits`, {\n        params: {\n          api_key: KEY,\n            \n        },\n    });  \n\n    \n    return response;\n\n};\n\nexport const fetchReviewsById = async (id) => { \naxios.defaults.baseURL = 'https://api.themoviedb.org/3/movie/';\n    const KEY = `9974480522bc7822e6ea6c551c75459b`;\n\n\n  const response = await  axios.get(`${id}/reviews`, {\n        params: {\n          api_key: KEY,\n            \n        },\n    });  \n\n    \n    return response;\n\n};\n\nexport const fetchMovieByQuery = async (query) => {\n  \n    axios.defaults.baseURL = 'https://api.themoviedb.org/3/search/movie';\n    const KEY = `9974480522bc7822e6ea6c551c75459b`;\n\n\n  const response = await  axios.get(``, {\n        params: {\n          api_key: KEY,\n          language: \"en-US\",\n          query,\n          page: 1,\n          include_adult: true,\n          \n            \n        },\n    });  \n\n    \n    return response;\n    \n};","import { useSearchParams } from \"react-router-dom\";\nimport { fetchMovieByQuery } from \"Api/Api\";\nimport { useEffect, useState } from \"react\";\nimport MoviesGallery from \"components/MoviesGallery/MoviesGallery\";\n\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\") === null ? \"\" : searchParams.get(\"query\");\n    const [movies, setMovies] = useState([]);\n    \n    console.log(query)\n\n\n    useEffect(() => {\n\n        const fetchMovies = async () => {\n\n\n            try {\n                const response = await fetchMovieByQuery(query);\n                setMovies(response.data.results)\n            } catch (error) {\n                console.log(error)\n            };\n        };\n\n        fetchMovies();\n\n\n    }, [query]);\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setSearchParams({query: e.target.elements.input.value});\n    };\n\n\n\n\n\n    return (<>\n        <div>\n\n            <form action=\"\" onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    name=\"input\"\n                />\n                <button type=\"submit\">Submit</button>\n            </form>\n\n            <MoviesGallery movies={movies} />\n\n        </div>\n\n\n    </>);\n};\nexport default Movies;","import styled from '@emotion/styled';\n\nexport const Gallery = styled.ul`\ntext-align: center;\npadding:0;\n`\nexport const Film = styled.li`\nlist-style-type:none;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n    display: inline-block;\n    margin: 10px;\n    width:300px;\n    background-color:#FFA559;\n`","import PropTypes from 'prop-types'; \nimport { Link, useLocation } from \"react-router-dom\";\nimport { Gallery, Film } from \"./MoviesGallery.styles\"\n\n\nexport default function MoviesGallery({ movies }) {\n    const location = useLocation();\n    console.log(movies);\n\n    return (\n        <Gallery>\n            {movies.map(movie => {\n                const image = `https://image.tmdb.org/t/p/w300/${movie.poster_path}`;\n                return (\n                    <Film key={movie.id}>\n                        <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                            <img src={image} alt={movie.title} />\n                            <p>{movie.title}</p>\n                        </Link>\n                    </Film>\n                );\n            })}\n        </Gallery>\n    );\n};\n\nMoviesGallery.propTypes = {\n    movies: PropTypes.array.isRequired,\n};\n"],"names":["fetchTrendings","axios","params","api_key","response","fetchMovieById","id","fetchCast","fetchReviewsById","fetchMovieByQuery","query","language","page","include_adult","useSearchParams","searchParams","setSearchParams","get","useState","movies","setMovies","console","log","useEffect","fetchMovies","data","results","action","onSubmit","e","preventDefault","target","elements","input","value","type","name","Gallery","styled","Film","MoviesGallery","location","useLocation","map","movie","image","poster_path","to","state","from","src","alt","title"],"sourceRoot":""}